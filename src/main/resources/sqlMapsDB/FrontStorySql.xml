<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

 <mapper namespace="FrontStoryDAO">
 	
 	<!--  광고 리스트 -->
 	<select id="selectAdList" resultType="HashMap" parameterType="plusBbsVO">
 		select a.bb_seq 			as bbSeq     	
			 , a.bi_seq 			as biSeq     	
			 , a.bc_seq 			as bcSeq     	
			 , a.cg_seq 			as cgSeq     	
			 , a.lg_seq 			as lgSeq     	
			 , a.bb_type 			as bbType    
			 , a.bb_bbs 			as bbBbs     	
			 , a.bb_open 			as bbOpen    
			 , a.bb_delyn 			as bbDelyn   	
			 , a.bb_title 			as bbTitle   	
			 , a.bb_etc01 			as bbEtc01   	
			 , a.bb_contents 		as bbContents
			 , a.bb_view 			as bbView    
			 , a.bb_date 			as bbDate    
			 , a.reg_date 			as regDate   	
			 , a.reg_user_id 		as regUserId 
			 , a.upt_date 			as uptDate   	
			 , a.udt_user_id 		as udtUserId
			 , l1.baf_seq 	    	as bafSeq
			 , l1.baf_path		    as pcPlayerBafPath
	         , l1.baf_file		    as pcPlayerBafFile
	         , l2.baf_path		    as pcThumbBafPath
	         , l2.baf_file		    as pcThumbBafFile
		  from plus_bbs a	left join plus_bbs_attach_file l1
								   on l1.bb_seq = a.bb_seq
		                          and l1.baf_code = 'pcplayer'
						    left join plus_bbs_attach_file l2
								   on l2.bb_seq = a.bb_seq
		                          and l2.baf_code = 'pcthumb'
		 where 1=1
		 <if test="bbBbs != null and bbBbs != ''.toString()">
		   and a.bb_bbs = #{bbBbs}
		 </if>
		   and a.bb_open = 'Y'
     	   and a.bb_delyn = 'N' 
		 order by a.reg_date desc
		 limit #{listLength} offset ${startIdx}
 	</select>

	<!--  광고 리스트 총 개수 -->
 	<select id="selectAdCnt" resultType="Integer" parameterType="plusBbsVO">
 		select count(*)
		  from plus_bbs
		 where 1=1
		 <if test="bbBbs != null and bbBbs != ''.toString()">
		   and bb_bbs = #{bbBbs}
		 </if>
		   and bb_open = 'Y'
     	   and bb_delyn = 'N'
 	</select>
 	
 	
 	<!--  광고 상세 -->
 	<select id="selectAdDetail" resultType="plusBbsVO" parameterType="plusBbsVO">
 		select a.bb_seq 			as bbSeq     	
			 , a.bi_seq 			as biSeq     	
			 , a.bc_seq 			as bcSeq     	
			 , a.cg_seq 			as cgSeq     	
			 , a.lg_seq 			as lgSeq     	
			 , a.bb_type 			as bbType    
			 , a.bb_bbs 			as bbBbs     	
			 , a.bb_open 			as bbOpen    
			 , a.bb_delyn 			as bbDelyn   	
			 , a.bb_title 			as bbTitle   	
			 , a.bb_etc01 			as bbEtc01   	
			 , a.bb_contents 		as bbContents
			 , a.bb_view 			as bbView    
			 , a.bb_date 			as bbDate    
			 , a.reg_date 			as regDate   	
			 , a.reg_user_id 		as regUserId 
			 , a.upt_date 			as uptDate   	
			 , a.udt_user_id 		as udtUserId
			 , l1.baf_seq 	    	as bafSeq
			 , l1.baf_path		    as pcPlayerBafPath
	         , l1.baf_file		    as pcPlayerBafFile
	         , l2.baf_path		    as pcThumbBafPath
	         , l2.baf_file		    as pcThumbBafFile
		  from plus_bbs a	left join plus_bbs_attach_file l1
								   on l1.bb_seq = a.bb_seq
		                          and l1.baf_code = 'pcplayer'
						    left join plus_bbs_attach_file l2
								   on l2.bb_seq = a.bb_seq
		                          and l2.baf_code = 'pcthumb'
		 where 1=1
		   and a.bb_bbs = #{bbBbs}
		   and a.bb_seq = #{bbSeq}
 	</select>
 	
 	<!-- 보도자료 리스트 -->
 	<select id="selectProductNewsList" resultType="HashMap" parameterType="plusBbsVO">
 		select a.bb_seq 			as bbSeq     	
			 , a.bi_seq 			as biSeq     	
			 , a.bc_seq 			as bcSeq     	
			 , a.cg_seq 			as cgSeq     	
			 , a.lg_seq 			as lgSeq     	
			 , a.bb_type 			as bbType    
			 , a.bb_bbs 			as bbBbs     	
			 , a.bb_open 			as bbOpen    
			 , a.bb_delyn 			as bbDelyn   	
			 , a.bb_title 			as bbTitle   	
			 , a.bb_etc01 			as bbEtc01   	
			 , a.bb_contents 		as bbContents
			 , a.bb_view 			as bbView    
			 , a.bb_date 			as bbDate    
			 , date_format(a.reg_date , '%Y-%m-%d')	as regDate   	
			 , a.reg_user_id 		as regUserId 
			 , a.upt_date 			as uptDate   	
			 , a.udt_user_id 		as udtUserId
		  from plus_bbs a	
		 where 1=1
		 <if test="bbBbs != null and bbBbs != ''.toString()">
		   and a.bb_bbs = #{bbBbs}
		 </if>
		   and a.bb_open = 'Y'
     	   and a.bb_delyn = 'N' 
     	   <if test="search != null and search != ''.toString()">
			   and a.bb_title like '%' #{search} '%'
		   </if>
		 order by a.bb_seq desc
		 limit #{listLength} offset ${startIdx}
 	</select>
 	
 	<!--  보도자료 개수 -->
 	<select id="selectProductNewsCnt" resultType="Integer" parameterType="plusBbsVO">
 		select count(*)
		  from plus_bbs
		 where 1=1
		 <if test="bbBbs != null and bbBbs != ''.toString()">
		   and bb_bbs = #{bbBbs}
		 </if>
		   and bb_open = 'Y'
     	   and bb_delyn = 'N'
     	   <if test="search != null and search != ''.toString()">
			   and bb_title like '%' #{search} '%'
		   </if>
 	</select>
 	
 	<!--  보도자료 상세 -->
 	<select id="selectPressReleaseDetail" resultType="plusBbsVO" parameterType="plusBbsVO">
 		select a.bb_seq 			as bbSeq     	
			 , a.bi_seq 			as biSeq     	
			 , a.bc_seq 			as bcSeq     	
			 , a.cg_seq 			as cgSeq     	
			 , a.lg_seq 			as lgSeq     	
			 , a.bb_type 			as bbType    
			 , a.bb_bbs 			as bbBbs     	
			 , a.bb_open 			as bbOpen    
			 , a.bb_delyn 			as bbDelyn   	
			 , a.bb_title 			as bbTitle   	
			 , a.bb_etc01 			as bbEtc01   	
			 , a.bb_contents 		as bbContents
			 , a.bb_view 			as bbView    
			 , a.bb_date 			as bbDate    
			 , date_format(a.reg_date , '%Y-%m-%d')	as regDate   	  	
			 , a.reg_user_id 		as regUserId 
			 , a.upt_date 			as uptDate   	
			 , a.udt_user_id 		as udtUserId
		  from plus_bbs a	
		 where 1=1
		   and a.bb_bbs = #{bbBbs}
		   and a.bb_seq = #{bbSeq}
 	</select>
 	
 	<!--  보도자료 이전 -->
 	<select id="selectPressReleaseDetailPrevDetail" resultType="plusBbsVO" parameterType="plusBbsVO">
 		select a.bb_seq 			                as bbSeq 		
		     , a.bb_title 		                    as bbTitle 		
		  from plus_bbs a
		 where 1=1
		   and a.bb_bbs = #{bbBbs}
		   and a.bb_open = 'Y'
     	   and a.bb_delyn = 'N'
		   and a.bb_seq <![CDATA[<]]> #{bbSeq}
		  order by bb_seq desc
		 limit 1
 	</select>
 	
 	<!--  보도자료 다음 -->
 	<select id="selectPressReleaseDetailNextDetail" resultType="plusBbsVO" parameterType="plusBbsVO">
 		select a.bb_seq 			                as bbSeq 		
		     , a.bb_title 		                    as bbTitle 		
		  from plus_bbs a
		 where 1=1
		   and a.bb_bbs = #{bbBbs}
		   and a.bb_open = 'Y'
     	   and a.bb_delyn = 'N'
		   and a.bb_seq <![CDATA[>]]> #{bbSeq}
		   order by bb_seq 
		  limit 1
 	</select>
 	
 	
 
 </mapper>