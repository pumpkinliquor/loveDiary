<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FrontWeekDAO">
	
	<!-- 학습 결과와 상세 분석 최근 푼 문제의 성취기준 상세 조회 -->
	<select id="selectAcvInfo" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectAcvInfo */
		SELECT *
		FROM   (
		              SELECT a.acv_name,
		                     a.sub_name ,
		                     a.acv_id ,
		                     a.lev_id ,
		                     (a.true_cnt / a.qst_cnt)  AS per ,
		                     (a.true_cnt / a.test_cnt) AS true_per ,
		                     (a.test_cnt / a.qst_cnt)  AS test_per ,
		                     a.qst_cnt ,
		                     a.test_cnt ,
		                     a.true_cnt ,
		                     a.st_date ,
		                     a.ed_date ,
		                     a.dur_time,
		                     SEC_TO_TIME(a.dur_time) AS dur_time_str,
		                     a.video_time,
                             SEC_TO_TIME(a.video_time) AS video_time_str,
		                     a.dur_video_time,
                             SEC_TO_TIME(a.dur_video_time) AS dur_video_time_str,
		                     a.dur_day
		              FROM   (
		                               SELECT    ach.acv_name ,
		                                         s.sub_name ,
		                                         ach.acv_id ,
		                                         ach.lev_id ,
		                                         (
		                                                SELECT Count(DISTINCT m.qst_id)
		                                                FROM   cb_aigo_my_answer_list m,
		                                                       cb_aigo_question q
		                                                WHERE  1=1
		                                                AND    m.qst_id = q.qst_id
		                                                AND    q.aca_id     IN ( 2,3,4 )
		                                                AND    q.sub_aca_id IN ( 36,37,38 )
		                                                AND    m.use_yn = 'y'
		                                                AND    q.use_yn = 'y'
		                                                AND    m.mem_id = a.mem_id
		                                                AND    q.acv_id = a.acv_id
		                                                AND    q.sub_id = a.sub_id
		                                                AND    q.lev_id = a.lev_id) AS test_cnt ,
		                                         (
		                                                SELECT Count(DISTINCT m.qst_id)
		                                                FROM   cb_aigo_my_answer_list m,
		                                                       cb_aigo_question q
		                                                WHERE  1=1
		                                                AND    m.qst_id = q.qst_id
		                                                AND    m.pass_yn = 'y'
		                                                AND    q.aca_id     IN ( 2,3,4 )
		                                                AND    q.sub_aca_id IN ( 36,37,38 )
		                                                AND    m.use_yn = 'y'
		                                                AND    q.use_yn = 'y'
		                                                AND    m.mem_id = a.mem_id
		                                                AND    q.acv_id = a.acv_id
		                                                AND    q.sub_id = a.sub_id
		                                                AND    q.lev_id = a.lev_id) AS true_cnt ,
		                                         (
		                                                SELECT Count(DISTINCT q.qst_id)
		                                                FROM   cb_aigo_question q
		                                                WHERE  1=1
		                                                AND    q.aca_id     IN ( 2,3,4 )
		                                                AND    q.sub_aca_id IN ( 36,37,38 )
		                                                AND    q.use_yn = 'y'
		                                                AND    q.acv_id = a.acv_id
		                                                AND    q.sub_id = a.sub_id
		                                                AND    q.lev_id = a.lev_id) AS qst_cnt ,
		                                         (
		                                                  SELECT   Date_format(m.udt_sysdate, '%Y-%m-%d')
		                                                  FROM     cb_aigo_my_answer_list m,
		                                                           cb_aigo_question q
		                                                  WHERE    1=1
		                                                  AND      m.qst_id = q.qst_id
		                                                  AND      m.pass_yn = 'y'
		                                                  AND      q.aca_id     IN ( 2,3,4 )
		                                                  AND      q.sub_aca_id IN ( 36,37,38 )
		                                                  AND      m.use_yn = 'y'
		                                                  AND      q.use_yn = 'y'
		                                                  AND      m.mem_id = a.mem_id
		                                                  AND      q.acv_id = a.acv_id
		                                                  AND      q.sub_id = a.sub_id
		                                                  AND      q.lev_id = a.lev_id
		                                                  ORDER BY m.udt_sysdate ASC limit 1) AS st_date ,
		                                         (
		                                                  SELECT   Date_format(m.udt_sysdate, '%Y-%m-%d')
		                                                  FROM     cb_aigo_my_answer_list m,
		                                                           cb_aigo_question q
		                                                  WHERE    1=1
		                                                  AND      m.qst_id = q.qst_id
		                                                  AND      m.pass_yn = 'y'
		                                                  AND      q.aca_id     IN ( 2,3,4 )
		                                                  AND      q.sub_aca_id IN ( 36,37,38 )
		                                                  AND      m.use_yn = 'y'
		                                                  AND      q.use_yn = 'y'
		                                                  AND      m.mem_id = a.mem_id
		                                                  AND      q.acv_id = a.acv_id
		                                                  AND      q.sub_id = a.sub_id
		                                                  AND      q.lev_id = a.lev_id
		                                                  ORDER BY m.udt_sysdate DESC limit 1) AS ed_date ,
		                                         a.dur_time,
		                                         a.video_time,
		                                         (a.dur_time + a.video_time) AS dur_video_time,
		                                         a.dur_day
		                               FROM      (
		                                                    SELECT     q.acv_id,
		                                                               q.sub_id,
		                                                               q.lev_id,
		                                                               m.mem_id ,
		                                                               Nvl(Sum(m.dur_time),0)                                           AS dur_time ,
		                                                               Nvl(Sum(Timestampdiff(second, v.pcl_in_time, v.pcl_out_time)),0) AS video_time ,
		                                                               Count(DISTINCT Date_format(m.udt_sysdate, '%Y%m%d'))             AS dur_day
		                                                    FROM       cb_aigo_my_answer_list m
		                                                    INNER JOIN cb_aigo_question q
		                                                    ON         m.qst_id = q.qst_id
		                                                    LEFT JOIN  cb_player_click_log v
		                                                    ON         q.qst_id = v.qst_id
		                                                    AND        m.mem_id = v.mem_id
		                                                    WHERE      1=1
		                                                    AND        m.use_yn = 'y'
		                                                    AND        q.use_yn = 'y'
		                                                    AND        q.aca_id     IN ( 2,3,4 )
		                                                    AND        q.sub_aca_id IN ( 36,37,38 )
		                                                    AND        m.mem_id = #{memId}
		                                                    AND        q.acv_id = #{acvId}
		                                                    GROUP BY   q.acv_id,
		                                                               q.sub_id,
		                                                               q.lev_id ) a
		                               LEFT JOIN cb_aigo_achievement ach
		                               ON        a.acv_id = ach.acv_id
		                               AND       a.sub_id = ach.sub_id
		                               AND       a.lev_id = ach.lev_id
		                               LEFT JOIN cb_aigo_subject s
		                               ON        ach.sub_id = s.sub_id ) a ) a
	</select>
	
	
	<select id="selectQstInfo" parameterType="map" resultType="camelMap">
		/* 2021 - 02 - 24 > selectWeekAcvList */
		/* FrontWeekDAO.selectQstInfo */
		select * from (
			select a.qst_no, a.qst_id, a.cpt_id, a.cpt_name, a.aca_id, a.aca_name, a.pass_ox, a.qst_value
				, a.all_test_cnt, a.all_true_cnt, (a.all_true_cnt / a.all_test_cnt) as all_per
				, @val := round((a.all_true_cnt / a.all_test_cnt) * 100, 1) as valPer
				, case when @val <![CDATA[<=]]> 25 then 'A'
					when @val <![CDATA[>]]> 25 and @val <![CDATA[<=]]> 50 then 'B'
					when @val <![CDATA[>]]> 50 and @val <![CDATA[<=]]> 75 then 'C'
					when @val <![CDATA[>]]> 75 and @val <![CDATA[<=]]> 90 then 'D'
					when @val <![CDATA[>]]> 90 and @val <![CDATA[<=]]> 100 then 'E'
				end test_lev
				, a.false_cnt, a.false_value, a.true_cnt, a.true_value, b.top_per
			from (
				select c.qst_no, b.qst_id, b.cpt_id, b.cpt_name, b.aca_id, b.aca_name, case when d.pass_yn = 'y' then 'O' else 'X' end pass_ox, b.qst_value
					, e.false_cnt, e.false_value, f.true_cnt, f.true_value
					, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
						where 1=1 and m.qst_id = q.qst_id and q.qst_id = b.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and q.acv_id = b.acv_id and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId} group by m.qst_id, mem_id
						ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS all_test_cnt /* 푼 문제 */
					, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
						where 1=1 and m.qst_id = q.qst_id and q.qst_id = b.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and m.pass_yn = 'y' and q.acv_id = b.acv_id and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId} group by m.qst_id, m.mem_id
						ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS all_true_cnt /* 맞춘 문제 */
				from (
						select * from cb_aigo_achievement ach where 1=1 and ach.use_yn = 'y'
				) a, (select m.qst_id, m.ans_value, q.acv_id, q.sub_id, q.lev_id, c.cpt_id, c.cpt_name, g.aca_id, g.aca_name, m.ans_id, q.qst_value from cb_aigo_my_answer_list m
					inner join cb_aigo_question q on m.qst_id = q.qst_id and q.use_yn = 'y'
					inner join cb_aigo_concept c on q.sub_id = c.sub_id and q.acv_id = c.acv_id and c.use_yn = 'y'
					inner join cb_aigo_category g on q.aca_id = g.aca_id and g.use_yn = 'y'
					where 1=1 and m.mem_id = #{memId} and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId} and m.use_yn = 'y'
					group by m.qst_id, q.acv_id, q.sub_id, q.lev_id
				) b, (select row_number() over (ORDER BY qst_id asc) as qst_no, qst_id from cb_aigo_question
					where 1=1 and acv_id = #{acvId} and aca_id in (2,3,4) and sub_aca_id in (36,37,38) and lev_id = #{levId} and use_yn = 'y'
				) c, (select qst_id, pass_yn from cb_aigo_my_answer_list
					where 1=1 and mem_id = #{memId} and use_yn = 'y'
				) d
				left join (select qst_id, count(ans_value) as false_cnt, ans_value as false_value from cb_aigo_my_answer_list
					where 1=1 and pass_yn = 'n' and use_yn = 'y'
					group by qst_id
				) e on d.qst_id = e.qst_id
				left join (select qst_id, count(ans_value) as true_cnt, ans_value as true_value from cb_aigo_my_answer_list
					where 1=1 and pass_yn = 'y' and use_yn = 'y'
					group by qst_id, ans_value
				) f on d.qst_id = f.qst_id
				where 1=1 and a.acv_id = b.acv_id and a.sub_id = b.sub_id and a.lev_id = b.lev_id
				and b.qst_id = c.qst_id and b.qst_id = d.qst_id
			) a
		    left join (select a.qst_id, (a.true_cnt / a.test_cnt) as top_per from (
					select a.qst_id, nvl(count(a.this_test_cnt), 0) as test_cnt , nvl(sum(a.this_true_cnt), 0) as true_cnt from (
						select a.qst_id
							, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
									where 1=1 and m.qst_id = q.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and q.acv_id = a.acv_id and m.mem_id = a.mem_id and q.qst_id = a.qst_id group by m.qst_id
									ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS this_test_cnt /* 해당 문제 */
							, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
									where 1=1 and m.qst_id = q.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and m.pass_yn = 'y' and q.acv_id = a.acv_id and m.mem_id = a.mem_id and q.qst_id = a.qst_id group by m.qst_id
									ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS this_true_cnt /* 해당 문제 정답 */ from (
							select a.mem_id, a.acv_id, a.qst_id from (
								select a.* from (
									select a.mem_id, a.acv_id, a.qst_id, a.sub_id, a.lev_id, a.acv_name, a.sub_name, a.test_cnt, a.true_cnt, a.qst_cnt
										, (a.true_cnt / (a.qst_cnt + a.test_cnt)) as per, (a.true_cnt / a.test_cnt) as true_per, (a.test_cnt / a.qst_cnt) as test_per
										, @val := round((a.true_cnt / a.test_cnt) * 100, 1) as valPer from (
										select b.acv_id, b.qst_id, b.sub_id, b.lev_id, a.acv_name, b.sub_name, b.mem_id
											, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
													where 1=1 and m.qst_id = q.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and q.acv_id = b.acv_id and m.mem_id = b.mem_id and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId} group by m.qst_id
													ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS test_cnt /* 푼 문제 */
											, nvl((select row_number() over (ORDER BY m.qst_id ASC) from cb_aigo_my_answer_list m, cb_aigo_question q
													where 1=1 and m.qst_id = q.qst_id and m.use_yn = 'y' and q.use_yn = 'y' and m.pass_yn = 'y' and q.acv_id = b.acv_id and m.mem_id = b.mem_id and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId} group by m.qst_id
													ORDER BY ROW_NUMBER() OVER (ORDER BY qst_id ASC) DESC LIMIT 1), 0) AS true_cnt /* 맞춘 문제 */
											, nvl((select count(distinct qst_id) from cb_aigo_question q
													where 1=1 and q.use_yn = 'y' and q.acv_id = b.acv_id and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId}
													), 0) AS qst_cnt /* 총 문제 개수 */ from (
											select * from cb_aigo_achievement ach where 1=1 and ach.use_yn = 'y'
										) a, (select q.acv_id, q.sub_id, q.lev_id, m.in_time, m.out_time, m.dur_time, q.qst_id, s.sub_name, m.mem_id from cb_aigo_my_answer_list m
											inner join cb_aigo_question q on m.qst_id = q.qst_id
											inner join cb_aigo_subject s on q.sub_id = s.sub_id
											where 1=1 and q.use_yn = 'y' and m.use_yn = 'y' and s.use_yn = 'y'
                                            and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId}
											order by m.udt_sysdate desc
										) b
										where 1=1 and a.acv_id = b.acv_id and a.sub_id = b.sub_id and a.lev_id = b.lev_id and a.use_yn = 'y'
									) a
								) a
								where 1=1 and a.valPer <![CDATA[>]]> 50
							) a group by a.mem_id
						) a
					) a group by qst_id
				) a
		    ) b on a.qst_id = b.qst_id
		) a
		group by a.qst_id
		<choose>
			<when test='!@com.plushih.common.utils.StringUtils@isEmpty(sortFilter)'>
				order by
				<foreach collection='sortFilter' index='index' item='item' separator=','>
					${item}
				</foreach>
			</when>
			<otherwise>
				order by a.qst_no
			</otherwise>
		</choose>
	</select>
	
	<select id="selectRivalInfo" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectRivalInfo */
		SELECT *
		FROM   (
		                  SELECT     a.user_test_cnt,
		                             b.all_avg_cnt
		                  FROM       (
		                                      SELECT   Count(distinct m.qst_id) AS user_test_cnt ,
		                                               @stDate :=
		                                               (
		                                                        SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                        FROM     cb_aigo_my_answer_list mm,
		                                                                 cb_aigo_question qq
		                                                        WHERE    1=1
		                                                        AND      mm.qst_id = qq.qst_id
		                                                        AND      mm.mem_id = m.mem_id
		                                                        AND      mm.use_yn = 'y'
		                                                        AND      qq.use_yn = 'y'
		                                                        AND      mm.mem_id = #{memId}
		                                                        AND      qq.aca_id     IN (2,3,4)
		                                                        AND      qq.sub_aca_id IN (36,37,38)
		                                                        AND      qq.lev_id = q.lev_id
		                                                        AND      qq.acv_id = q.acv_id
		                                                        ORDER BY mm.udt_sysdate ASC limit 1) AS st_date ,
		                                               @edDate :=
		                                               (
		                                                        SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                        FROM     cb_aigo_my_answer_list mm,
		                                                                 cb_aigo_question qq
		                                                        WHERE    1=1
		                                                        AND      mm.qst_id = qq.qst_id
		                                                        AND      mm.mem_id = m.mem_id
		                                                        AND      mm.use_yn = 'y'
		                                                        AND      qq.use_yn = 'y'
		                                                        AND      mm.mem_id = #{memId}
		                                                        AND      qq.aca_id     IN (2,3,4)
		                                                        AND      qq.sub_aca_id IN (36,37,38)
		                                                        AND      qq.lev_id = q.lev_id
		                                                        AND      qq.acv_id = q.acv_id
		                                                        ORDER BY mm.udt_sysdate DESC limit 1) AS ed_date
		                                      FROM     cb_aigo_my_answer_list m,
		                                               cb_aigo_question q
		                                      WHERE    1=1
		                                      AND      m.qst_id = q.qst_id
		                                      AND      m.use_yn = 'y'
		                                      AND      q.use_yn = 'y'
		                                      AND      m.mem_id = #{memId}
		                                      AND      q.aca_id     IN (2,3,4)
		                                      AND      q.sub_aca_id IN (36,37,38)
		                                      AND      acv_id = #{acvId}
		                                      GROUP BY m.mem_id ) a
		                  INNER JOIN
		                             (
		                                    SELECT round(avg(a.all_cnt)) AS all_avg_cnt
		                                    FROM   (
		                                                    SELECT   count(distinct m.qst_id) AS all_cnt ,
		                                                             (
		                                                                      SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                                      FROM     cb_aigo_my_answer_list mm,
		                                                                               cb_aigo_question qq
		                                                                      WHERE    1=1
		                                                                      AND      mm.qst_id = qq.qst_id
		                                                                      AND      mm.mem_id = m.mem_id
		                                                                      AND      mm.use_yn = 'y'
		                                                                      AND      qq.use_yn = 'y'
		                                                                      AND      mm.mem_id != #{memId}
		                                                                      AND      qq.aca_id     IN (2,3,4)
		                                                                      AND      qq.sub_aca_id IN (36,37,38)
		                                                                      AND      qq.lev_id = q.lev_id
		                                                                      AND      qq.acv_id = q.acv_id
		                                                                      ORDER BY mm.udt_sysdate ASC limit 1) AS st_date ,
		                                                             (
		                                                                      SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                                      FROM     cb_aigo_my_answer_list mm,
		                                                                               cb_aigo_question qq
		                                                                      WHERE    1=1
		                                                                      AND      mm.qst_id = qq.qst_id
		                                                                      AND      mm.mem_id = m.mem_id
		                                                                      AND      mm.use_yn = 'y'
		                                                                      AND      qq.use_yn = 'y'
		                                                                      AND      mm.mem_id != #{memId}
		                                                                      AND      qq.aca_id     IN (2,3,4)
		                                                                      AND      qq.sub_aca_id IN (36,37,38)
		                                                                      AND      qq.lev_id = q.lev_id
		                                                                      AND      qq.acv_id = q.acv_id
		                                                                      ORDER BY mm.udt_sysdate DESC limit 1) AS ed_date
		                                                    FROM     cb_aigo_my_answer_list m,
		                                                             cb_aigo_question q,
		                                                             cb_member mem
		                                                    WHERE    1=1
		                                                    AND      m.qst_id = q.qst_id
		                                                    AND		 m.mem_id = mem.mem_id
		                                                    AND      m.use_yn = 'y'
		                                                    AND      q.use_yn = 'y'
		                                                    AND      m.mem_id != #{memId}
		                                                    AND      q.aca_id     IN (2,3,4)
		                                                    AND      q.sub_aca_id IN (36,37,38)
		                                                    AND      acv_id = #{acvId}
		                                                    AND		 mem.mem_level = #{levId}
		                                                    GROUP BY m.mem_id ) a
		                                    WHERE  1=1
		                                    /*AND    @stDate <![CDATA[<=]]> a.st_date*/
		                                    /*AND    @edDate <![CDATA[>=]]> a.ed_date*/ ) b ) a
	</select>

	<!-- 최근 푼 문제의 성취기준 상세 조회 -->
	<select id="selectTotalReport" parameterType="map" resultType="camelMap">
	SELECT
	TIME_FORMAT(SEC_TO_TIME(SUM(out_time-in_time)),'%H.%i') acc_ai_time
	,DATE_FORMAT(MIN(in_time),'%Y-%m-%d %H-%i') first_date
	,DATE_FORMAT(MAX(out_time),'%Y-%m-%d %H-%i') last_date
	,TIME_FORMAT(SEC_TO_TIME(SUM(out_time-in_time)),'%H.%i') acc_time
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(out_time-in_time) ELSE 0 END) prev_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(out_time-in_time) ELSE 0 END) this_month

	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(out_time-in_time) ELSE 0 END) prev_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(out_time-in_time) ELSE 0 END) this_day
	,SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) qst_num
	,COUNT(*) max_qst_num


	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -5 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev05_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev04_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev03_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev02_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev01_month
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  CEIL(SUM(out_time-in_time)/60) ELSE 0 END) prev00_month


	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -5 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev05_month_ox
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev04_month_ox
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev03_month_ox
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev02_month_ox
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev01_month_ox
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 MONTH),'%Y%m')=DATE_FORMAT(in_time,'%Y%m') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev00_month_ox

	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -30 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev30_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -29 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev29_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -28 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev28_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -27 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev27_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -26 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev26_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -25 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev25_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -24 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev24_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -23 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev23_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -22 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev22_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -21 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev21_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -20 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev20_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -19 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev19_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -18 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev18_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -17 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev17_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -16 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev16_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -15 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev15_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -14 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev14_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -13 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev13_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -12 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev12_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -11 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev11_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -10 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev10_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -9 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev09_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -8 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev08_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -7 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev07_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -6 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev06_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -5 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev05_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -4 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev04_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -3 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev03_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev02_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev01_day
	,(CASE WHEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 DAY),'%Y%m%d')=DATE_FORMAT(in_time,'%Y%m%d') THEN  SUM(CASE WHEN a.ans_value = b.qst_value  THEN 1 ELSE 0 END) ELSE 0 END) prev00_day
	,(SELECT count(*) from cb_member where mem_level = 1 and mem_id = a.mem_id) as level1
	,(SELECT count(*) from cb_member where mem_level = 2 and mem_id = a.mem_id) as level2
	,(SELECT count(*) from cb_member where mem_level = 3 and mem_id = a.mem_id) as level3
	,(SELECT count(*) from cb_member where mem_level = 4 and mem_id = a.mem_id) as level4
	,(SELECT count(*) from cb_member where mem_level = 5 and mem_id = a.mem_id) as level5
	,(SELECT mem_level from cb_member where mem_id = ifnull(a.mem_id,0)) as mem_level
	FROM cb_aigo_my_answer_list a
	LEFT JOIN cb_aigo_question b ON a.qst_id = b.qst_id
	WHERE in_time IS NOT NULL AND a.mem_id = #{memId} and a.use_yn = 'y' and b.use_yn = 'y'
	</select>
	
	<!-- 해당 성취기준의 사용자 런타임, 해당 성취기준의 모든 사용자 런타임 -->
	<select id="selectRuntimeInfo" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectRuntimeInfo */
		SELECT *
		FROM   (
		                  SELECT     Sec_to_time(a.user_dur_time) AS sec_to_user_dur_time,
		                             a.user_dur_time,
		                             Sec_to_time(b.all_dur_time) AS sec_to_all_dur_time,
		                             b.all_dur_time
		                  FROM       (
		                                      SELECT   Sum(m.dur_time) AS user_dur_time ,
		                                               @stdate :=
		                                               (
		                                                        SELECT   Date_format(mm.udt_sysdate, '%Y%m%d')
		                                                        FROM     aigo.cb_aigo_my_answer_list mm,
		                                                                 aigo.cb_aigo_question qq
		                                                        WHERE    1=1
		                                                        AND      mm.qst_id = qq.qst_id
		                                                        AND      mm.mem_id = m.mem_id
		                                                        AND      mm.use_yn = 'y'
		                                                        AND      qq.use_yn = 'y'
		                                                        AND      mm.mem_id = #{memId}
		                                                        AND      qq.aca_id     IN (2,3,4)
		                                                        AND      qq.sub_aca_id IN (36,37,38)
		                                                        AND      qq.lev_id = q.lev_id
		                                                        AND      qq.acv_id = q.acv_id
		                                                        ORDER BY mm.udt_sysdate ASC
		                                                        LIMIT    1) AS st_date , @eddate :=
		                                               (
		                                                        SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                        FROM     aigo.cb_aigo_my_answer_list mm,
		                                                                 aigo.cb_aigo_question qq
		                                                        WHERE    1=1
		                                                        AND      mm.qst_id = qq.qst_id
		                                                        AND      mm.mem_id = m.mem_id
		                                                        AND      mm.use_yn = 'y'
		                                                        AND      qq.use_yn = 'y'
		                                                        AND      mm.mem_id = #{memId}
		                                                        AND      qq.aca_id     IN (2,3,4)
		                                                        AND      qq.sub_aca_id IN (36,37,38)
		                                                        AND      qq.lev_id = q.lev_id
		                                                        AND      qq.acv_id = q.acv_id
		                                                        ORDER BY mm.udt_sysdate DESC
		                                                        LIMIT    1) AS ed_date
		                                      FROM     aigo.cb_aigo_my_answer_list m,
		                                               aigo.cb_aigo_question q
		                                      WHERE    1=1
		                                      AND      m.qst_id = q.qst_id
		                                      AND      m.use_yn = 'y'
		                                      AND      q.use_yn = 'y'
		                                      AND      m.mem_id = #{memId}
		                                      AND      q.aca_id     IN (2,3,4)
		                                      AND      q.sub_aca_id IN (36,37,38)
		                                      AND      q.acv_id = #{acvId}
		                                      GROUP BY m.mem_id ) a
		                  INNER JOIN
		                             (
		                                    SELECT a.all_dur_time
		                                    FROM   (
		                                                  SELECT dur_time AS all_dur_time
		                                                  FROM   (
		                                                                SELECT dur_time,
		                                                                       a.st_date,
		                                                                       a.ed_date
		                                                                FROM   (
		                                                                              SELECT round(avg(a.dur_time)) AS dur_time,
		                                                                                     a.st_date,
		                                                                                     a.ed_date
		                                                                              FROM   (
		                                                                                              SELECT   sum(m.dur_time) AS dur_time,
		                                                                                                       (
		                                                                                                                SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                                                                                FROM     aigo.cb_aigo_my_answer_list mm,
		                                                                                                                         aigo.cb_aigo_question qq
		                                                                                                                WHERE    1=1
		                                                                                                                AND      mm.qst_id = qq.qst_id
		                                                                                                                AND      mm.mem_id = m.mem_id
		                                                                                                                AND      mm.use_yn = 'y'
		                                                                                                                AND      qq.use_yn = 'y'
		                                                                                                                AND      mm.mem_id != #{memId}
		                                                                                                                AND      qq.aca_id     IN (2,3,4)
		                                                                                                                AND      qq.sub_aca_id IN (36,37,38)
		                                                                                                                AND      qq.lev_id = q.lev_id
		                                                                                                                AND      qq.acv_id = q.acv_id
		                                                                                                                ORDER BY mm.udt_sysdate ASC
		                                                                                                                LIMIT    1) AS st_date ,
		                                                                                                       (
		                                                                                                                SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                                                                                                FROM     aigo.cb_aigo_my_answer_list mm,
		                                                                                                                         aigo.cb_aigo_question qq
		                                                                                                                WHERE    1=1
		                                                                                                                AND      mm.qst_id = qq.qst_id
		                                                                                                                AND      mm.mem_id = m.mem_id
		                                                                                                                AND      mm.use_yn = 'y'
		                                                                                                                AND      qq.use_yn = 'y'
		                                                                                                                AND      mm.mem_id != #{memId}
		                                                                                                                AND      qq.aca_id     IN (2,3,4)
		                                                                                                                AND      qq.sub_aca_id IN (36,37,38)
		                                                                                                                AND      qq.lev_id = q.lev_id
		                                                                                                                AND      qq.acv_id = q.acv_id
		                                                                                                                ORDER BY mm.udt_sysdate DESC
		                                                                                                                LIMIT    1) AS ed_date
		                                                                                              FROM     aigo.cb_aigo_my_answer_list m,
		                                                                                                       aigo.cb_aigo_question q,
		                                                                                                       aigo.cb_member mem
		                                                                                              WHERE    m.qst_id = q.qst_id
		                                                                                              AND      m.mem_id = mem.mem_id
		                                                                                              AND      m.mem_id != #{memId}
		                                                                                              AND      q.aca_id     IN (2,3,4)
		                                                                                              AND      q.sub_aca_id IN (36,37,38)
		                                                                                              AND      mem.mem_level = #{levId}
		                                                                                              AND      q.acv_id = #{acvId}
		                                                                                              GROUP BY m.mem_id ) a ) a
		                                                                WHERE  1=1
		                                                                /*AND    @stDate <![CDATA[<=]]> a.st_date*/
																		/*AND    @edDate <![CDATA[>=]]> a.ed_date*/ ) a ) a) b ) a
	</select>
	
	<!-- 해당 성취기준의 정답율, 해당 성취기준의 경쟁자 평균 정답율 -->
	<select id="selectPerInfo" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectPerInfo */
		SELECT *
		FROM   (
						  SELECT     Round((a.qst_pass_cnt / a.qst_cnt), 4) AS user_per,
									 b.all_per
						  FROM       (
											  SELECT
													   (
															  SELECT Count(DISTINCT mm.qst_id)
															  FROM   cb_aigo_my_answer_list mm,
																	 cb_aigo_question qq
															  WHERE  1=1
															  AND    mm.qst_id = qq.qst_id
															  AND    mm.use_yn = 'y'
															  AND    qq.use_yn = 'y'
															  AND    mm.mem_id = m.mem_id
															  AND    qq.aca_id     IN (2,3,4)
															  AND    qq.sub_aca_id IN (36,37,38)
															  AND    qq.lev_id = q.lev_id
															  AND    qq.acv_id = q.acv_id) AS qst_cnt ,
													   (
															  SELECT Count(DISTINCT mm.qst_id)
															  FROM   cb_aigo_my_answer_list mm,
																	 cb_aigo_question qq
															  WHERE  1=1
															  AND    mm.qst_id = qq.qst_id
															  AND    mm.pass_yn = 'y'
															  AND    mm.use_yn = 'y'
															  AND    qq.use_yn = 'y'
															  AND    mm.mem_id = m.mem_id
															  AND    qq.aca_id     IN (2,3,4)
															  AND    qq.sub_aca_id IN (36,37,38)
															  AND    qq.lev_id = q.lev_id
															  AND    qq.acv_id = q.acv_id) AS qst_pass_cnt ,
													   @stDate :=
													   (
																SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
																FROM     cb_aigo_my_answer_list mm,
																		 cb_aigo_question qq
																WHERE    1=1
																AND      mm.qst_id = qq.qst_id
																AND      mm.mem_id = m.mem_id
																AND      mm.use_yn = 'y'
																AND      qq.use_yn = 'y'
																AND      mm.mem_id = #{memId}
																AND      qq.aca_id     IN (2,3,4)
																AND      qq.sub_aca_id IN (36,37,38)
																AND      qq.lev_id = q.lev_id
																AND      qq.acv_id = q.acv_id
																ORDER BY mm.udt_sysdate ASC limit 1) AS st_date ,
													   @edDate :=
													   (
																SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
																FROM     cb_aigo_my_answer_list mm,
																		 cb_aigo_question qq
																WHERE    1=1
																AND      mm.qst_id = qq.qst_id
																AND      mm.mem_id = m.mem_id
																AND      mm.use_yn = 'y'
																AND      qq.use_yn = 'y'
																AND      mm.mem_id = #{memId}
																AND      qq.aca_id     IN (2,3,4)
																AND      qq.sub_aca_id IN (36,37,38)
																AND      qq.lev_id = q.lev_id
																AND      qq.acv_id = q.acv_id
																ORDER BY mm.udt_sysdate DESC limit 1) AS ed_date
											  FROM     cb_aigo_my_answer_list m,
													   cb_aigo_question q
											  WHERE    1=1
											  AND      m.qst_id = q.qst_id
											  AND      m.use_yn = 'y'
											  AND      q.use_yn = 'y'
											  AND      m.mem_id = #{memId}
											  AND      q.aca_id     IN (2,3,4)
											  AND      q.sub_aca_id IN (36,37,38)
											  AND      acv_id = #{acvId}
											  GROUP BY m.mem_id ) a
						  INNER JOIN
									 (
											SELECT round(avg(a.qst_pass_cnt / a.qst_cnt), 4) AS all_per
											FROM   (
														  SELECT a.mem_id,
																 a.qst_cnt,
																 a.qst_pass_cnt,
																 a.st_date,
																 a.ed_date
														  FROM   (
																		  SELECT   m.mem_id ,
																				   (
																						  SELECT count(DISTINCT mm.qst_id)
																						  FROM   cb_aigo_my_answer_list mm,
																								 cb_aigo_question qq
																						  WHERE  1=1
																						  AND    mm.qst_id = qq.qst_id
																						  AND    mm.use_yn = 'y'
																						  AND    qq.use_yn = 'y'
																						  AND    mm.mem_id = m.mem_id
																						  AND    qq.aca_id     IN (2,3,4)
																						  AND    qq.sub_aca_id IN (36,37,38)
																						  AND    qq.lev_id = q.lev_id
																						  AND    qq.acv_id = q.acv_id) AS qst_cnt ,
																				   (
																						  SELECT count(DISTINCT mm.qst_id)
																						  FROM   cb_aigo_my_answer_list mm,
																								 cb_aigo_question qq
																						  WHERE  1=1
																						  AND    mm.qst_id = qq.qst_id
																						  AND    mm.pass_yn = 'y'
																						  AND    mm.use_yn = 'y'
																						  AND    qq.use_yn = 'y'
																						  AND    mm.mem_id = m.mem_id
																						  AND    qq.aca_id     IN (2,3,4)
																						  AND    qq.sub_aca_id IN (36,37,38)
																						  AND    qq.lev_id = q.lev_id
																						  AND    qq.acv_id = q.acv_id) AS qst_pass_cnt ,
																				   (
																							SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
																							FROM     cb_aigo_my_answer_list mm,
																									 cb_aigo_question qq
																							WHERE    1=1
																							AND      mm.qst_id = qq.qst_id
																							AND      mm.mem_id = m.mem_id
																							AND      mm.use_yn = 'y'
																							AND      qq.use_yn = 'y'
																							AND      mm.mem_id != #{memId}
																							AND      qq.aca_id     IN (2,3,4)
																							AND      qq.sub_aca_id IN (36,37,38)
																							AND      qq.lev_id = q.lev_id
																							AND      qq.acv_id = q.acv_id
																							ORDER BY mm.udt_sysdate ASC limit 1) AS st_date ,
																				   (
																							SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
																							FROM     cb_aigo_my_answer_list mm,
																									 cb_aigo_question qq
																							WHERE    1=1
																							AND      mm.qst_id = qq.qst_id
																							AND      mm.mem_id = m.mem_id
																							AND      mm.use_yn = 'y'
																							AND      qq.use_yn = 'y'
																							AND      mm.mem_id != #{memId}
																							AND      qq.aca_id     IN (2,3,4)
																							AND      qq.sub_aca_id IN (36,37,38)
																							AND      qq.lev_id = q.lev_id
																							AND      qq.acv_id = q.acv_id
																							ORDER BY mm.udt_sysdate DESC limit 1) AS ed_date
																		  FROM     cb_aigo_my_answer_list m,
																				   cb_aigo_question q,
																				   cb_member mem
																		  WHERE    1=1
																		  AND      m.qst_id = q.qst_id
																		  AND	   m.mem_id = mem.mem_id
																		  AND      m.use_yn = 'y'
																		  AND      q.use_yn = 'y'
																		  AND      m.mem_id != #{memId}
																		  AND      q.aca_id     IN (2,3,4)
																		  AND      q.sub_aca_id IN (36,37,38)
																		  AND	   mem.mem_level = #{levId}
																		  AND      q.acv_id = #{acvId}
																		  GROUP BY m.mem_id ) a
														  WHERE  1=1
														  /*AND    @stDate <![CDATA[<=]]> a.st_date*/
														  /*AND    @edDate <![CDATA[>=]]> a.ed_date*/ ) a ) b ) a
	</select>
	
	<!-- 주간리포트에서 다음 성취기준 버튼 클릭 시 아직 안 푼 성취기준 -->
	<select id="selectNotTestAcvInfo" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectNotTestAcvInfo */
		select a.lev_id, a.sub_id, s.sub_name, a.acv_order, a.acv_id, a.acv_name, a.mem_id, a.qst_cnt, a.all_qst_cnt, (a.all_qst_cnt - a.qst_cnt) as user_all_qst_cnt from (
			select a.acv_order, a.acv_id, a.acv_name, a.mem_id, a.qst_cnt, count(q.qst_id) as all_qst_cnt, a.lev_id, a.sub_id
				from (
					select a.acv_order, a.acv_id, a.acv_name, b.mem_id, count(b.mem_id) as qst_cnt, a.lev_id, a.sub_id
					from cb_aigo_achievement a
					left join (
						select a.mem_id, q.acv_id, q.qst_id
						from cb_aigo_my_answer_list a
						left join cb_aigo_question q on a.qst_id = q.qst_id and a.use_yn = 'y' and q.use_yn = 'y' and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId}
						group by a.qst_id, a.mem_id
					) b on a.acv_id=b.acv_id and b.mem_id = #{memId} and a.use_yn = 'y'
					group by a.acv_id, b.mem_id, a.acv_order
			) a
			left join cb_aigo_question q on a.acv_id = q.acv_id and q.use_yn = 'y' and q.aca_id in (2,3,4) and q.sub_aca_id in (36,37,38) and q.lev_id = #{levId}
			group by a.acv_id, a.mem_id, a.acv_order
		) a
		inner join cb_aigo_subject s on a.sub_id = s.sub_id
        where 1=1 and a.sub_id in (1,2,#{userSubId}) and s.use_yn = 'y'
        having all_qst_cnt > qst_cnt
        order by a.sub_id, a.lev_id, a.acv_id, a.acv_order desc
        limit 1
	</select>
	
	<!-- 사용자/경쟁자의 강점, 취약 단원 -->
	<select id="selectTotalUnitList" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectTotalUnitList */
		select * from (
			select a.unit_id, a.unit_name, a.all_unit_qst_cnt, a.all_unit_test_cnt, a.all_unit_true_cnt, nvl((a.all_unit_true_cnt / a.all_unit_test_cnt), 0) as all_per
				, a.user_unit_test_cnt, a.user_unit_true_cnt, nvl((a.user_unit_true_cnt / a.user_unit_test_cnt), 0) as user_per
				, case when a.unit_id in (4,5,6,11,12) then '04' 
					when a.unit_id in (2) then '02'
                    when a.unit_id in (1) then '01'
                    when a.unit_id in (8,9) then '06'
                    when a.unit_id in (10) then '07'
                    when a.unit_id in (13) then '08'
                    when a.unit_id in (7) then '05'
                    when a.unit_id in (8) then '02'
                    when a.unit_id in (3) then '03'
                    when a.unit_id in (14,15) then '09'
                end unit_style
            from (
				select a.unit_id, a.unit_name
					, nvl((select count(q.qst_id) from cb_aigo_question q where 1=1 and q.unit_id = a.unit_id and q.use_yn = 'y' and q.aca_id in (2,3,4) AND q.sub_aca_id in (36,37,38)), 0) as all_unit_qst_cnt
					, nvl((select count(m.qst_id) from cb_aigo_my_answer_list m, cb_aigo_question q where 1=1 and m.qst_id = q.qst_id and q.unit_id = a.unit_id and m.mem_id != #{memId} and q.use_yn = 'y' and m.use_yn = 'y' and q.aca_id in (2,3,4) AND q.sub_aca_id in (36,37,38)), 0) as all_unit_test_cnt
					, nvl((select count(m.qst_id) from cb_aigo_my_answer_list m, cb_aigo_question q where 1=1 and m.qst_id = q.qst_id and q.unit_id = a.unit_id and m.mem_id != #{memId} and m.pass_yn = 'y' and q.use_yn = 'y' and m.use_yn = 'y' and q.aca_id in (2,3,4) AND q.sub_aca_id in (36,37,38)), 0) as all_unit_true_cnt
					, nvl((select count(m.qst_id) from cb_aigo_my_answer_list m, cb_aigo_question q where 1=1 and m.qst_id = q.qst_id and q.unit_id = a.unit_id and m.mem_id = #{memId} and q.use_yn = 'y' and m.use_yn = 'y' and q.aca_id in (2,3,4) AND q.sub_aca_id in (36,37,38)), 0) as user_unit_test_cnt
					, nvl((select count(m.qst_id) from cb_aigo_my_answer_list m, cb_aigo_question q where 1=1 and m.qst_id = q.qst_id and q.unit_id = a.unit_id and m.mem_id = #{memId} and m.pass_yn = 'y' and q.use_yn = 'y' and m.use_yn = 'y' and q.aca_id in (2,3,4) AND q.sub_aca_id in (36,37,38)), 0) as user_unit_true_cnt
				from (
					select u.unit_id, u.unit_name from cb_aigo_unit u where 1=1 and u.use_yn = 'y'
				) a /* 단원별 풀이 수, 정답 수 */
			) a
		) a
        having a.all_unit_qst_cnt <![CDATA[>]]> 0
        <if test='sort == "ut" or sort == "uf"'> and a.user_unit_test_cnt <![CDATA[>]]> 0</if>
        <if test='sort == "at" or sort == "af"'> and a.all_unit_test_cnt <![CDATA[>]]> 0</if>
        order by 
		<choose>
			<when test='!@com.plushih.common.utils.StringUtils@isEmpty(sort)'>
				<if test='sort == "ut"'> a.user_per desc,</if>
				<if test='sort == "at"'> a.all_per desc,</if>
				<if test='sort == "uf"'> a.user_per,</if>
				<if test='sort == "af"'> a.all_per,</if>
			</when>
		</choose>
		a.unit_id
		limit 5
	</select>
	
	<!-- 사용자의 사이클이 있는 성취기준 리스트 최근 순 조회 -->
	<select id="selectAcvList" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectAcvList */
		SELECT q.acv_id,
		       a.acv_name
		FROM   cb_aigo_my_answer_list m,
		       cb_aigo_question q,
		       cb_aigo_achievement a,
		       cb_aigo_learn_history his
		WHERE  1 = 1
		       AND m.qst_id = q.qst_id
		       AND q.acv_id = a.acv_id
		       AND q.acv_id = his.acv_id
               AND m.mem_id = his.mem_id
		       AND m.mem_id = #{memId}
		       AND q.use_yn = 'y'
		       AND m.use_yn = 'y'
		       AND a.use_yn = 'y'
		       AND his.thi_test_type = 'weekly'
		GROUP  BY q.acv_id
		ORDER  BY m.udt_sysdate DESC 
	</select>
	
	<!-- 주간리포트 해당 성취기준 정보 조회 -->
	<select id="selectWeekAcvList" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectWeekAcvList */
		SELECT     b.*
		FROM       (
		                    SELECT   m.qst_id,
		                             @outnum :=   0,
		                             @outqstid := 0,
		                             @num :=      0,
		                             @qstid :=    0
		                    FROM     aigo.cb_aigo_my_answer_list m,
		                             aigo.cb_aigo_question q
		                    WHERE    1=1
		                    AND      m.qst_id = q.qst_id
		                    AND      q.acv_id = #{acvId}
		                    AND      m.mem_id = #{memId}
		                    AND      m.use_yn = 'y'
		                    AND      q.use_yn = 'y'
		                    AND      q.aca_id IN ( 2,
		                                          3,
		                                          4 )
		                    AND      q.sub_aca_id IN ( 36,
		                                              37,
		                                              38 )
		                    GROUP BY m.qst_id ) a
		INNER JOIN
		           (
		                     SELECT    a.qst_id,
		                               a.aca_name,
		                               q.qst_value,
		                               a.pass_yn,
		                               a.all_test_cnt,
		                               a.all_true_cnt,
		                               a.all_per,
		                               Round(a.all_per * 100) AS all_per_str,
		                               a.top_user_test_cnt,
		                               a.top_user_true_cnt,
		                               a.top_per,
		                               a.top_per_str,
		                               CASE
		                                         WHEN a.all_per <![CDATA[<=]]> 0.2500 THEN 'A'
												 WHEN a.all_per <![CDATA[>]]> 0.2500
												 AND       a.all_per <![CDATA[<=]]> 0.5000 THEN 'B'
												 WHEN a.all_per <![CDATA[>]]> 0.5000
												 AND       a.all_per <![CDATA[<=]]> 0.7500 THEN 'C'
												 WHEN a.all_per <![CDATA[>]]> 0.7500
												 AND       a.all_per <![CDATA[<=]]> 0.9000 THEN 'D'
												 WHEN a.all_per <![CDATA[>]]> 0.9000
												 AND       a.all_per <![CDATA[<=]]> 1.0000 THEN 'E'
		                               end test_lev,
		                               ach.acv_id,
		                               ach.acv_name,
		                               a.cpt_id_str,
		                               a.cpt_nm_str,
		                               b.max_false_value
		                     FROM      (
		                                        SELECT   *
		                                        FROM     (
		                                                          SELECT   a.qst_id,
		                                                                   a.aca_name,
		                                                                   a.pass_yn,
		                                                                   a.all_test_cnt,
		                                                                   a.all_true_cnt,
		                                                                   a.all_per,
		                                                                   a.top_user_test_cnt,
		                                                                   a.top_user_true_cnt,
		                                                                   a.top_per,
		                                                                   a.top_per_str,
		                                                                   a.cpt_id_str,
		                                                                   a.cpt_nm_str
		                                                          FROM     (
		                                                                          SELECT a.aca_name,
		                                                                                 a.pass_yn,
		                                                                                 a.all_test_cnt,
		                                                                                 a.all_true_cnt,
		                                                                                 a.all_per,
		                                                                                 a.top_user_test_cnt,
		                                                                                 a.top_user_true_cnt,
		                                                                                 a.top_per,
		                                                                                 Round(a.top_per * 100) AS top_per_str,
		                                                                                 a.qst_id,
		                                                                                 a.cpt_id_str,
		                                                                                 a.cpt_nm_str
		                                                                          FROM   (
		                                                                                          SELECT   a.*
		                                                                                          FROM     (
		                                                                                                            SELECT   a.aca_name,
		                                                                                                                     a.all_test_cnt,
		                                                                                                                     a.all_true_cnt,
		                                                                                                                     a.all_per,
		                                                                                                                     a.top_user_test_cnt,
		                                                                                                                     a.top_user_true_cnt,
		                                                                                                                     nvl(( cast(a.top_user_true_cnt AS integer) / cast(a.top_user_test_cnt AS INTEGER) ), 0) AS top_per,
		                                                                                                                     a.qst_id,
		                                                                                                                     a.pass_yn,
		                                                                                                                     a.cpt_id_str,
		                                                                                                                     (
		                                                                                                                            SELECT group_concat(cpt_name SEPARATOR ',')
		                                                                                                                            FROM   aigo.cb_aigo_concept
		                                                                                                                            WHERE  find_in_set(cpt_id, a.cpt_id_str)) AS cpt_nm_str
		                                                                                                            FROM     (
		                                                                                                                               SELECT    a.aca_name,
		                                                                                                                                         a.all_test_cnt,
		                                                                                                                                         a.all_true_cnt,
		                                                                                                                                         nvl(( cast(a.all_true_cnt AS INTEGER) / cast(a.all_test_cnt AS INTEGER) ), 0) AS all_per,
		                                                                                                                                         a.pass_yn,
		                                                                                                                                         a.qst_id,
		                                                                                                                                         b.top_user_test_cnt,
		                                                                                                                                         b.top_user_true_cnt,
		                                                                                                                                         (
		                                                                                                                                                SELECT group_concat(cpt_id SEPARATOR ',')
		                                                                                                                                                FROM   aigo.cb_aigo_notion
		                                                                                                                                                WHERE  find_in_set(not_id, a.qst_rel_not_id)) AS cpt_id_str
		                                                                                                                               FROM      (
		                                                                                                                                                SELECT a.aca_name,
		                                                                                                                                                       a.qst_id,
		                                                                                                                                                       a.pass_yn,
		                                                                                                                                                       a.qst_rel_not_id,
		                                                                                                                                                       nvl(
		                                                                                                                                                             (
		                                                                                                                                                             SELECT count(m.qst_id)
		                                                                                                                                                             FROM   aigo.cb_aigo_my_answer_list m,
		                                                                                                                                                                    aigo.cb_aigo_question q
		                                                                                                                                                             WHERE  1 = 1
		                                                                                                                                                             AND    m.qst_id = q.qst_id
		                                                                                                                                                             AND    q.qst_id = a.qst_id
		                                                                                                                                                             AND    q.use_yn = 'y'
		                                                                                                                                                             AND    m.use_yn = 'y'), 0) AS all_test_cnt,
		                                                                                                                                                       nvl(
		                                                                                                                                                             (
		                                                                                                                                                             SELECT count(m.qst_id)
		                                                                                                                                                             FROM   aigo.cb_aigo_my_answer_list m,
		                                                                                                                                                                    aigo.cb_aigo_question q
		                                                                                                                                                             WHERE  1 = 1
		                                                                                                                                                             AND    m.qst_id = q.qst_id
		                                                                                                                                                             AND    q.qst_id = a.qst_id
		                                                                                                                                                             AND    m.pass_yn = 'y'
		                                                                                                                                                             AND    q.use_yn = 'y'
		                                                                                                                                                             AND    m.use_yn = 'y'), 0) AS all_true_cnt
		                                                                                                                                                FROM   (
		                                                                                                                                                                SELECT   m.qst_id,
		                                                                                                                                                                         c.aca_name,
		                                                                                                                                                                         m.pass_yn,
		                                                                                                                                                                         q.qst_rel_not_id
		                                                                                                                                                                FROM     aigo.cb_aigo_my_answer_list m,
		                                                                                                                                                                         aigo.cb_aigo_question q,
		                                                                                                                                                                         aigo.cb_aigo_category c
		                                                                                                                                                                WHERE    1 = 1
		                                                                                                                                                                AND      m.qst_id = q.qst_id
		                                                                                                                                                                AND      q.aca_id = c.aca_id
		                                                                                                                                                                AND      m.mem_id = #{memId}
		                                                                                                                                                                AND      m.use_yn = 'y'
		                                                                                                                                                                AND      q.use_yn = 'y'
		                                                                                                                                                                AND      q.aca_id IN ( 2,
		                                                                                                                                                                                      3,
		                                                                                                                                                                                      4 )
		                                                                                                                                                                AND      q.sub_aca_id IN ( 36,
		                                                                                                                                                                                          37,
		                                                                                                                                                                                          38 )
		                                                                                                                                                                GROUP BY m.qst_id
		                                                                                                                                                                ORDER BY m.qst_id,
		                                                                                                                                                                         m.udt_sysdate DESC) a
		                                                                                                                                                       /* 단원별 풀이 수, 정답 수 */
		                                                                                                                                         ) a
		                                                                                                                               LEFT JOIN
		                                                                                                                                         (
		                                                                                                                                                    SELECT     nvl(a.top_user_test_cnt, 0) AS top_user_test_cnt,
		                                                                                                                                                               nvl(b.top_user_true_cnt, 0) AS top_user_true_cnt,
		                                                                                                                                                               a.qst_id
		                                                                                                                                                    FROM       (
		                                                                                                                                                                        SELECT   count(a.qst_id) AS top_user_test_cnt,
		                                                                                                                                                                                 qst_id
		                                                                                                                                                                        FROM     (
		                                                                                                                                                                                        SELECT *
		                                                                                                                                                                                        FROM   (
		                                                                                                                                                                                                        SELECT     a.*,
		                                                                                                                                                                                                        b.qst_id
		                                                                                                                                                                                                        FROM       (
		                                                                                                                                                                                                        SELECT   a.mem_id,
		                                                                                                                                                                                                        1 - ((a.my_avg_high_cnt + (a.my_avg_same_cnt / 2)) / a.all_member_cnt) AS user_per
		                                                                                                                                                                                                        FROM     (
		                                                                                                                                                                                                        SELECT   m.mem_id,
		                                                                                                                                                                                                        m.per,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   count(a.mem_id)
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg a
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND      a.per <![CDATA[>]]> m.per
		                                                                                                                                                                                                        ORDER BY a.per) AS my_avg_high_cnt,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   count(a.mem_id)
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg a
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND      a.per = m.per
		                                                                                                                                                                                                        ORDER BY a.per) AS my_avg_same_cnt,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT count(a.mem_id)
		                                                                                                                                                                                                        FROM   aigo.v_cb_member_avg a) AS all_member_cnt
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg m
		                                                                                                                                                                                                        ORDER BY m.per ) a
		                                                                                                                                                                                                        GROUP BY a.mem_id ) a
		                                                                                                                                                                                                        INNER JOIN
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   m.mem_id,
		                                                                                                                                                                                                        m.qst_id
		                                                                                                                                                                                                        FROM     aigo.cb_aigo_my_answer_list m,
		                                                                                                                                                                                                        aigo.cb_aigo_question q
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND		 m.qst_id = q.qst_id
		                                                                                                                                                                                                        AND      m.use_yn = 'y'
		                                                                                                                                                                                                        AND      q.use_yn = 'y'
		                                                                                                                                                                                                        AND      q.aca_id     IN ( 2,3,4 )
		                                                                                                                                                                                                        AND      q.sub_aca_id IN ( 36,37,38 )
		                                                                                                                                                                                                        GROUP BY m.qst_id ) b
		                                                                                                                                                                                                        ON         a.mem_id = b.mem_id ) a
		                                                                                                                                                                                        HAVING a.user_per <![CDATA[>]]> 0.5000) a
		                                                                                                                                                                        GROUP BY a.qst_id ) a
		                                                                                                                                                    INNER JOIN
		                                                                                                                                                               (
		                                                                                                                                                                        SELECT   count(a.qst_id) AS top_user_true_cnt,
		                                                                                                                                                                                 qst_id
		                                                                                                                                                                        FROM     (
		                                                                                                                                                                                        SELECT *
		                                                                                                                                                                                        FROM   (
		                                                                                                                                                                                                        SELECT     a.*,
		                                                                                                                                                                                                        b.qst_id
		                                                                                                                                                                                                        FROM       (
		                                                                                                                                                                                                        SELECT   a.mem_id,
		                                                                                                                                                                                                        1 - ((a.my_avg_high_cnt + (a.my_avg_same_cnt / 2)) / a.all_member_cnt) AS user_per
		                                                                                                                                                                                                        FROM     (
		                                                                                                                                                                                                        SELECT   m.mem_id,
		                                                                                                                                                                                                        m.per,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   count(a.mem_id)
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg a
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND      a.per <![CDATA[>]]> m.per
		                                                                                                                                                                                                        ORDER BY a.per) AS my_avg_high_cnt,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   count(a.mem_id)
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg a
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND      a.per = m.per
		                                                                                                                                                                                                        ORDER BY a.per) AS my_avg_same_cnt,
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT count(a.mem_id)
		                                                                                                                                                                                                        FROM   aigo.v_cb_member_avg a) AS all_member_cnt
		                                                                                                                                                                                                        FROM     aigo.v_cb_member_avg m
		                                                                                                                                                                                                        ORDER BY m.per ) a
		                                                                                                                                                                                                        GROUP BY a.mem_id ) a
		                                                                                                                                                                                                        INNER JOIN
		                                                                                                                                                                                                        (
		                                                                                                                                                                                                        SELECT   m.mem_id,
		                                                                                                                                                                                                        m.qst_id
		                                                                                                                                                                                                        FROM     aigo.cb_aigo_my_answer_list m,
		                                                                                                                                                                                                        aigo.cb_aigo_question q
		                                                                                                                                                                                                        WHERE    1=1
		                                                                                                                                                                                                        AND		 m.qst_id = q.qst_id
		                                                                                                                                                                                                        AND      m.use_yn = 'y'
		                                                                                                                                                                                                        AND      q.use_yn = 'y'
		                                                                                                                                                                                                        AND      m.pass_yn = 'y'
		                                                                                                                                                                                                        AND      q.aca_id     IN ( 2,3,4 )
		                                                                                                                                                                                                        AND      q.sub_aca_id IN ( 36,37,38 )
		                                                                                                                                                                                                        GROUP BY m.qst_id ) b
		                                                                                                                                                                                                        ON         a.mem_id = b.mem_id ) a
		                                                                                                                                                                                        HAVING a.user_per <![CDATA[>]]> 0.5000) a
		                                                                                                                                                                        GROUP BY a.qst_id ) b
		                                                                                                                                                    ON         a.qst_id = b.qst_id ) b
		                                                                                                                               ON        a.qst_id = b.qst_id
		                                                                                                                                         /* 해당 문제를 푼 상위 50퍼센트 이상 유저의 수, 맞춘 수 */
		                                                                                                                     ) a
		                                                                                                            ORDER BY a.qst_id) a
		                                                                                          GROUP BY a.qst_id) a) a
		                                                          ORDER BY a.qst_id DESC) a
		                                        GROUP BY a.qst_id) a
		                     LEFT JOIN aigo.cb_aigo_question q
		                     ON        a.qst_id = q.qst_id
		                     LEFT JOIN aigo.cb_aigo_achievement ach
		                     ON        q.acv_id = ach.acv_id
		                     LEFT JOIN aigo.cb_aigo_notion n
		                     ON        q.sub_id = n.sub_id
		                     AND       q.acv_id = n.acv_id
		                     LEFT JOIN
		                               (
		                                        SELECT   a.qst_id,
		                                                 a.max_false_value
		                                        FROM     (
		                                                          SELECT   *
		                                                          FROM     (
		                                                                            SELECT   *
		                                                                            FROM     (
		                                                                                              SELECT   m.qst_id,
		                                                                                                       m.ans_value        AS max_false_value,
		                                                                                                       count(m.ans_value) AS max_false_cnt
		                                                                                              FROM     aigo.cb_aigo_my_answer_list m,
		                                                                                                       aigo.cb_aigo_question q
		                                                                                              WHERE    1=1
		                                                                                              AND      m.qst_id = q.qst_id
		                                                                                              AND      m.pass_yn = 'n'
		                                                                                              AND      m.use_yn = 'y'
		                                                                                              AND      q.use_yn = 'y'
		                                                                                              AND      q.aca_id     IN ( 2,3,4 )
		                                                                                              AND      q.sub_aca_id IN ( 36,37,38 )
		                                                                                              GROUP BY m.qst_id,
		                                                                                                       m.ans_value ) a
		                                                                            ORDER BY a.qst_id,
		                                                                                     a.max_false_cnt DESC ) a
		                                                          GROUP BY a.qst_id) a
		                                        GROUP BY a.qst_id ) b
		                     ON        a.qst_id = b.qst_id
		                     WHERE     1=1
		                     AND       ach.acv_id = #{acvId} ) b
		ON         a.qst_id = b.qst_id
		GROUP BY   b.qst_id
	</select>
	
	<!-- 탑메뉴 클릭 시, 주간리포트 UPDATE 아이콘 노출여부 -->
	<select id="selectThisWeekDayCnt" parameterType="map" resultType="int">
		/* FrontWeekDAO.selectThisWeekDayCnt */
		SELECT Count(a.diff_time) AS week_day_cnt
		FROM   (
		              SELECT Substring(Sec_to_time(Timestampdiff(second, his.reg_date, Now())), 1, Instr(Sec_to_time(Timestampdiff(second, his.reg_date, Now())), ':') - 1) AS diff_time
		              FROM   aigo.cb_aigo_learn_history his
		              WHERE  his.mem_id = #{memId}
		              AND    his.thi_test_type = 'weekly') a
		WHERE  1 = 1
		AND    a.diff_time <![CDATA[<]]> 24
	</select>
	
	<!-- 탑메뉴 클릭 시, 종합리포트 UPDATE 아이콘 노출여부 -->
	<select id="selectThisTotalDayCnt" parameterType="map" resultType="int">
		/* FrontWeekDAO.selectThisWeekDayCnt */
		SELECT Count(a.diff_time) AS total_day_cnt
		FROM   (
		              SELECT Substring(Sec_to_time(Timestampdiff(second, m.reg_sysdate, Now())), 1, Instr(Sec_to_time(Timestampdiff(second, m.reg_sysdate,Now())), ':') - 1) AS diff_time
		              FROM   aigo.cb_aigo_my_answer_list m
		              WHERE  m.mem_id = #{memId}) a
		WHERE  1 = 1
		AND    a.diff_time <![CDATA[<]]> 24
	</select>
	
	<!-- 주간리포트 카운트 -->
	<select id="selectWeekReportCnt" parameterType="map" resultType="int">
		/* FrontWeekDAO.selectWeekReportCnt */
		SELECT Count(thi_id) AS report_cnt
		FROM   cb_aigo_learn_history
		WHERE  1 = 1
		       AND mem_id = #{memId}
		       AND thi_test_type = 'weekly' 
	</select>
	
	<!-- 종합리포트 카운트 -->
	<select id="selectTotalReportCnt" parameterType="map" resultType="int">
		/* FrontWeekDAO.selectTotalReportCnt */
		SELECT Count(qst_id) AS qst_cnt
		FROM   cb_aigo_my_answer_list
		WHERE  1 = 1
		       AND mem_id = #{memId} 
	</select>
	
	<!-- 종합리포트 나의레벨, 학습시간 기본 조회 -->
	<select id="selectTotalReportTmp" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectTotalReportTmp */
		SELECT    a.mem_id,
		          a.mem_level,
		          a.my_level,
		          a.first_lev,
		          a.lev_cnt,
		          a.all_lev_cnt,
		          a.lev_avg,
		          a.first_test_dt,
		          a.last_test_dt,
		          CASE WHEN
		          	Timestampdiff(day, a.first_test_sysdate, now()) <![CDATA[>]]> 999
		          		THEN '999+'
		          		ELSE Timestampdiff(day, a.first_test_sysdate, now())
		          			END all_test_day,
		          a.all_test_dur_time,
		          a.all_video_dur_time,
		          Time_format(Sec_to_time(a.all_test_dur_time + a.all_video_dur_time),'%H:%i:%s') AS all_dur_hour,
		          a.now_month,
		          a.now_day,
		          a.prev_month,
		          a.prev_day,
		          Nvl(b.this_dur_time,0)                                          AS this_month_time,
		          Nvl(c.prev_dur_time,0)                                          AS prev_month_time,
		          TIME_FORMAT(SEC_TO_TIME((Nvl(b.this_dur_time,0) - Nvl(c.prev_dur_time,0))),'%H:%i:%s') AS ext_month_hour ,
		          Nvl(d.this_dur_time,0)                                          AS this_day_time ,
		          Nvl(e.prev_dur_time,0)                                          AS prev_day_time ,
		          TIME_FORMAT(SEC_TO_TIME((Nvl(d.this_dur_time,0) - Nvl(e.prev_dur_time,0))),'%H:%i:%s') AS ext_day_hour
		FROM      (
		                    SELECT    b.mem_id,
		                              a.mem_level,
		                              b.my_level,
		                              a.lev_cnt,
		                              a.all_lev_cnt,
		                              Round((a.lev_cnt / a.all_lev_cnt * 10), 1) AS lev_avg,
		                              Cast(Date_format(Now(), '%m') AS                               INT)      AS now_month,
		                              cast(date_format(date_sub( Now(), interval 1 month ), '%m') AS int)      AS prev_month,
		                              cast(date_format(now(), '%d') AS                               int)      AS now_day,
		                              cast(date_format(date_sub( now(), interval 1 day ), '%d') AS   int)      AS prev_day,
		                              (
		                                       SELECT   date_format(mm.reg_sysdate, '%Y-%m-%d %H시 %i분')
		                                       FROM     cb_aigo_my_answer_list mm
		                                       WHERE    1 = 1
		                                       AND      mm.mem_id = b.mem_id
		                                       ORDER BY mm.reg_sysdate ASC limit 1) AS first_test_dt,
		                              (
		                                       SELECT   date_format(mm.reg_sysdate, '%Y%m%d')
		                                       FROM     cb_aigo_my_answer_list mm
		                                       WHERE    1 = 1
		                                       AND      mm.mem_id = b.mem_id
		                                       ORDER BY mm.reg_sysdate ASC limit 1) AS first_test_sysdate,
		                              (
		                                       SELECT   date_format(mm.udt_sysdate, '%Y-%m-%d %H시 %i분')
		                                       FROM     cb_aigo_my_answer_list mm
		                                       WHERE    1 = 1
		                                       AND      mm.mem_id = b.mem_id
		                                       ORDER BY mm.udt_sysdate DESC limit 1) AS last_test_dt,
		                              (
		                                       SELECT   date_format(mm.udt_sysdate, '%Y%m%d')
		                                       FROM     cb_aigo_my_answer_list mm
		                                       WHERE    1 = 1
		                                       AND      mm.mem_id = b.mem_id
		                                       ORDER BY mm.udt_sysdate DESC limit 1) AS last_test_sysdate,
		                              (
		                                     SELECT nvl(sum(mm.dur_time),0)
		                                     FROM   cb_aigo_my_answer_list mm
		                                     WHERE  1 = 1
		                                     AND    mm.mem_id = b.mem_id) AS all_test_dur_time,
		                              (
		                                     SELECT nvl(sum(timestampdiff(second, vv.pcl_in_time, vv.pcl_out_time)),0)
		                                     FROM   cb_aigo_my_answer_list mm,
		                                            cb_player_click_log vv
		                                     WHERE  1 = 1
		                                     AND    mm.mem_id = vv.mem_id
		                                     AND    mm.mem_id = b.mem_id) AS all_video_dur_time,
		                              (
											 SELECT mlh_from 
                                             FROM 	aigo.cb_member_level_history
                                             WHERE mem_id = '263' 
                                             ORDER BY reg_sysdate LIMIT 1) AS first_lev
		                    FROM      (
		                                       SELECT   mem_level,
		                                                count(mem_level) AS lev_cnt,
		                                                (
		                                                       SELECT count(mem_level)
		                                                       FROM   cb_member
		                                                       WHERE  1 = 1
		                                                       AND    mem_level NOT IN (0)) AS all_lev_cnt
		                                       FROM     cb_member
		                                       WHERE    1 = 1
		                                       AND      mem_level NOT IN (0)
		                                       GROUP BY mem_level) a
		                    LEFT JOIN
		                              (
		                                     SELECT mem_level AS my_level,
		                                            mem_id
		                                     FROM   cb_member
		                                     WHERE  1 = 1
		                                     AND    mem_id = #{memId}) b
		                    ON        a.mem_level = b.my_level ) a
		LEFT JOIN
		          (
		                   SELECT   extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) AS now_month,
		                            sum(dur_time)                                            AS this_dur_time
		                   FROM     cb_aigo_my_answer_list
		                   WHERE    1=1
		                   AND      mem_id = #{memId}
		                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) ) b
		ON        a.now_month = b.now_month
		LEFT JOIN
		          (
		                   SELECT   extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) AS now_month,
		                            sum(dur_time)                                            AS prev_dur_time
		                   FROM     cb_aigo_my_answer_list
		                   WHERE    1=1
		                   AND      mem_id = #{memId}
		                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) ) c
		ON        a.prev_month = c.now_month
		LEFT JOIN
		          (
		                   SELECT   extract(month FROM date_format(reg_sysdate , '%Y-%m-%d')) AS now_month,
		                            extract(day FROM date_format(reg_sysdate, '%Y-%m-%d'))    AS now_day,
		                            sum(dur_time)                                             AS this_dur_time
		                   FROM     cb_aigo_my_answer_list
		                   WHERE    1=1
		                   AND      mem_id = #{memId}
		                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')),
		                            extract(day FROM date_format(reg_sysdate, '%Y-%m-%d')) ) d
		ON        a.now_month = d.now_month
		AND       a.now_day = d.now_day
		LEFT JOIN
		          (
		                   SELECT   extract(month FROM date_format(reg_sysdate , '%Y-%m-%d')) AS now_month,
		                            extract(day FROM date_format(reg_sysdate, '%Y-%m-%d'))    AS now_day,
		                            sum(dur_time)                                             AS prev_dur_time
		                   FROM     cb_aigo_my_answer_list
		                   WHERE    1=1
		                   AND      mem_id = #{memId}
		                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')),
		                            extract(day FROM date_format(reg_sysdate, '%Y-%m-%d')) ) e
		ON        a.now_month = e.now_month
		AND       a.prev_day = e.now_day
	</select>
	
	<!-- 종합리포트 누적 학습시간 추이 조회 -->
	<select id="selectChartDurTime" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectChartDurTime */
		SELECT group_concat(a.chart_month separator ',')    AS chart_month,
			   group_concat(a.chart_sysdate separator ',')  AS chart_sysdate,
		       group_concat(a.total_dur_time separator ',') AS total_dur_time
		FROM   (
		                SELECT   a.chart_month,
		                		 concat(substring(a.chart_sysdate, 3, 2), '년', substring(a.chart_sysdate, 5), '월') AS chart_sysdate,
		                         a.total_dur_time
		                FROM     (
		                                   SELECT    a.*,
		                                             nvl(b.total_dur_time, 0) AS total_dur_time
		                                   FROM      (
		                                                        SELECT     @curRow := @curRow +                                                         1,
		                                                                   cast(date_format(date_sub( now(), interval @curRow month ), '%m') AS   int) AS chart_month,
		                                                                   cast(date_format(date_sub( now(), interval @curRow month ), '%Y%m') AS int) AS chart_sysdate
		                                                        FROM       cb_aigo_my_answer_list
		                                                        INNER JOIN
		                                                                   (
		                                                                          SELECT @curRow := -1) s
		                                                        WHERE      @curRow <![CDATA[<]]> 5) a
		                                   LEFT JOIN
		                                             (
		                                                      SELECT   extract(month FROM date_format(reg_sysdate, '%Y-%m-%d' )) AS chart_month,
		                                                               sum(dur_time)                                             AS total_dur_time
		                                                      FROM     cb_aigo_my_answer_list
		                                                      WHERE    1 = 1
		                                                      AND      mem_id = #{memId}
		                                                      GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d'))) b
		                                   ON        a.chart_month = b.chart_month) a
		                ORDER BY a.chart_sysdate,
		                         a.chart_month ) a
	</select>
	
	<!-- 정답율 추이 월별(6개월) -->
	<select id="selectChartMonth" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectChartMonth */
		/* month */
		SELECT	  NVL(GROUP_CONCAT(a.chart_day SEPARATOR ','), 0) AS chart_day,
				  NVL(GROUP_CONCAT(a.chart_sysdate SEPARATOR ','), 0) AS chart_sysdate,
		          NVL(GROUP_CONCAT(NVL(a.total_test_cnt, 0) SEPARATOR ','), 0) AS total_test_cnt,
		          NVL(GROUP_CONCAT(NVL(a.total_true_cnt, 0) SEPARATOR ','), 0) AS total_true_cnt
		FROM	  (
			SELECT    a.chart_day,
					  CONCAT(SUBSTRING(a.chart_sysdate, 3, 2), '년', SUBSTRING(a.chart_sysdate, 5), '월') AS chart_sysdate,
			          NVL(b.total_test_cnt, 0) AS total_test_cnt,
			          NVL(c.total_true_cnt, 0) AS total_true_cnt
			FROM      (
			                     SELECT     @currow := @currow +                                                         1,
			                                cast(Date_format(Date_sub( Now(), INTERVAL @currow month ), '%m') AS   int) AS chart_day,
			                                cast(date_format(date_sub( now(), INTERVAL @curRow month ), '%Y%m') AS INT) AS chart_sysdate
			                     FROM       cb_aigo_my_answer_list
			                     INNER JOIN
			                                (
			                                       SELECT @curRow := -1) a
			                     WHERE      @curRow <![CDATA[<]]> 5 ) a
			INNER JOIN
			          (
			                   SELECT   extract(month FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m')                         AS chart_sysdate,
			                            count(qst_id)                                             AS total_test_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) ) b
			ON        a.chart_sysdate = b.chart_sysdate
			INNER JOIN
			          (
			                   SELECT   extract(month FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m')                         AS chart_sysdate,
			                            count(qst_id)                                             AS total_true_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   AND      pass_yn = 'y'
			                   GROUP BY extract(month FROM date_format(reg_sysdate, '%Y-%m-%d')) ) c
			ON        a.chart_sysdate = c.chart_sysdate
			ORDER BY  a.chart_sysdate,
			          a.chart_day
		) a
	</select>
	
	<!-- 정답율 추이 30일 -->
	<select id="selectChartOneMonth" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectChartOneMonth */
		/* 30 */
		SELECT	  NVL(GROUP_CONCAT(a.chart_day SEPARATOR ','), 0) AS chart_day,
				  NVL(GROUP_CONCAT(a.chart_sysdate SEPARATOR ','), 0) AS chart_sysdate,
		          NVL(GROUP_CONCAT(NVL(a.total_test_cnt, 0) SEPARATOR ','), 0) AS total_test_cnt,
		          NVL(GROUP_CONCAT(NVL(a.total_true_cnt, 0) SEPARATOR ','), 0) AS total_true_cnt
		FROM	  (
			SELECT    a.chart_day,
					  CONCAT(SUBSTRING(a.chart_sysdate, 5, 2), '월', SUBSTRING(a.chart_sysdate, 7), '일') AS chart_sysdate,
			          NVL(b.total_test_cnt, 0) AS total_test_cnt,
			          NVL(c.total_true_cnt, 0) AS total_true_cnt
			FROM      (
			                     SELECT     @currow := @currow +                                                       1,
			                                cast(Date_format(Date_sub( Now(), INTERVAL @currow day ), '%d') AS     int) AS chart_day,
			                                cast(date_format(date_sub( now(), INTERVAL @curRow day ), '%Y%m%d') AS INT) AS chart_sysdate
			                     FROM       cb_aigo_my_answer_list
			                     INNER JOIN
			                                (
			                                       SELECT @curRow := -1) a
			                     WHERE      @curRow <![CDATA[<]]> 29 ) a
			INNER JOIN
			          (
			                   SELECT   extract(day FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m%d')                     AS chart_sysdate,
			                            count(qst_id)                                           AS total_test_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   GROUP BY date_format(reg_sysdate , '%Y%m%d') ) b
			ON        a.chart_sysdate = b.chart_sysdate
			INNER JOIN
			          (
			                   SELECT   extract(day FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m%d')                     AS chart_sysdate,
			                            count(qst_id)                                           AS total_true_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   AND      pass_yn = 'y'
			                   GROUP BY date_format(reg_sysdate , '%Y%m%d') ) c
			ON        a.chart_sysdate = c.chart_sysdate
			ORDER BY  a.chart_sysdate,
			          a.chart_day
		) a
	</select>
	
	<!-- 정답율 추이 1주일 -->
	<select id="selectChartWeek" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectChartWeek */
		/* 7 */
		SELECT	  NVL(GROUP_CONCAT(a.chart_day SEPARATOR ','), 0) AS chart_day,
				  NVL(GROUP_CONCAT(a.chart_sysdate SEPARATOR ','), 0) AS chart_sysdate,
		          NVL(GROUP_CONCAT(NVL(a.total_test_cnt, 0) SEPARATOR ','), 0) AS total_test_cnt,
		          NVL(GROUP_CONCAT(NVL(a.total_true_cnt, 0) SEPARATOR ','), 0) AS total_true_cnt
		FROM	  (
			SELECT    a.chart_day,
					  CONCAT(SUBSTRING(a.chart_sysdate, 5, 2), '월', SUBSTRING(a.chart_sysdate, 7), '일') AS chart_sysdate,
			          NVL(b.total_test_cnt, 0) AS total_test_cnt,
			          NVL(c.total_true_cnt, 0) AS total_true_cnt
			FROM      (
			                     SELECT     @currow := @currow +                                                       1,
			                                cast(Date_format(Date_sub( Now(), INTERVAL @currow day ), '%d') AS     int) AS chart_day,
			                                cast(date_format(date_sub( now(), INTERVAL @curRow day ), '%Y%m%d') AS INT) AS chart_sysdate
			                     FROM       cb_aigo_my_answer_list
			                     INNER JOIN
			                                (
			                                       SELECT @curRow := -1) a
			                     WHERE      @curRow <![CDATA[<]]> 6 ) a
			INNER JOIN
			          (
			                   SELECT   extract(day FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m%d')                     AS chart_sysdate,
			                            count(qst_id)                                           AS total_test_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   GROUP BY date_format(reg_sysdate , '%Y%m%d') ) b
			ON        a.chart_sysdate = b.chart_sysdate
			INNER JOIN
			          (
			                   SELECT   extract(day FROM date_format(reg_sysdate , '%Y-%m-%d')) AS chart_day,
			                            date_format(reg_sysdate , '%Y%m%d')                     AS chart_sysdate,
			                            count(qst_id)                                           AS total_true_cnt
			                   FROM     cb_aigo_my_answer_list
			                   WHERE    1=1
			                   AND      mem_id = #{memId}
			                   AND      pass_yn = 'y'
			                   GROUP BY date_format(reg_sysdate , '%Y%m%d') ) c
			ON        a.chart_sysdate = c.chart_sysdate
			ORDER BY  a.chart_sysdate,
			          a.chart_day
		) a
	</select>
	
	<!-- 종합리포트 나의 학습 패턴(요일별) -->
	<select id="selectDayOfWeek" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectDayOfWeek */
		SELECT   Group_concat(a.total_day_of_week ORDER BY a.total_day_of_week SEPARATOR ',')     AS total_day_of_week,
		         Group_concat(a.total_day_of_week_str ORDER BY a.total_day_of_week SEPARATOR ',') AS total_day_of_week_str,
		         Group_concat(a.total_day_of_week_cnt ORDER BY a.total_day_of_week SEPARATOR ',') AS total_day_of_week_cnt
		FROM     (
		                  SELECT   a.total_day_of_week_str,
		                           a.total_day_of_week,
		                           Count(a.total_day_of_week) AS total_day_of_week_cnt
		                  FROM     (
		                                  SELECT
												 CASE
																WHEN Dayofweek(b.reg_sysdate) = 1 THEN '일'
																WHEN Dayofweek(b.reg_sysdate) = 2 THEN '월'
																WHEN Dayofweek(b.reg_sysdate) = 3 THEN '화'
																WHEN Dayofweek(b.reg_sysdate) = 4 THEN '수'
																WHEN Dayofweek(b.reg_sysdate) = 5 THEN '목'
																WHEN Dayofweek(b.reg_sysdate) = 6 THEN '금'
																WHEN Dayofweek(b.reg_sysdate) = 7 THEN '토'
													 END                         total_day_of_week_str,
		                                         Dayofweek(b.reg_sysdate) AS total_day_of_week
		                                  FROM   aigo.cb_aigo_my_answer_list b
		                                  WHERE  b.mem_id = #{memId} ) a
		                  GROUP BY a.total_day_of_week ) a
		ORDER BY a.total_day_of_week
	</select>
	
	<!-- 종합리포트 나의 학습 패턴(시간별) -->
	<select id="selectClockOfDay" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectClockOfDay */
		SELECT   Group_concat(a.total_clock ORDER BY a.total_clock SEPARATOR ',')     AS total_clock,
		         Group_concat(a.total_clock_str ORDER BY a.total_clock SEPARATOR ',') AS total_clock_str,
		         Group_concat(a.total_clock_cnt ORDER BY a.total_clock SEPARATOR ',') AS total_clock_cnt
		FROM     (
		                  SELECT   a.total_clock_str,
		                           a.total_clock,
		                           Count(a.total_clock) AS total_clock_cnt
		                  FROM     (
		                                  SELECT
		                                         CASE
		                                                WHEN cast(Date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0300' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0600' AS INT) THEN '새벽'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0600' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0900' AS INT) THEN '아침'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0900' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1200' AS INT) THEN '오전'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1200' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1500' AS INT) THEN '점심'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1500' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1800' AS INT) THEN '오후'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1800' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('2100' AS INT) THEN '저녁'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('2100' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0300' AS INT) THEN '밤'
		                                         end total_clock_str,
		                                         CASE
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0300' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0600' AS INT) THEN '7'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0600' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0900' AS INT) THEN '1'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('0900' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1200' AS INT) THEN '2'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1200' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1500' AS INT) THEN '3'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1500' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('1800' AS INT) THEN '4'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('1800' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('2100' AS INT) THEN '5'
		                                                WHEN cast(date_format(b.reg_sysdate, '%H%i') AS   INT) <![CDATA[>=]]> cast('2100' AS INT)
		                                                AND    cast(date_format(b.reg_sysdate, '%H%i') AS INT) <![CDATA[<]]> cast('0300' AS INT) THEN '6'
		                                         end total_clock
		                                  FROM   aigo.cb_aigo_my_answer_list b
		                                  WHERE  b.mem_id = #{memId} ) a
		                  GROUP BY a.total_clock ) a
		ORDER BY a.total_clock
	</select>
	
	<!-- 유저의 모든 푼 문제 정보(푼 문제, 맞춘 문제) -->
	<select id="selectAllTestCnt" parameterType="map" resultType="camelMap">
		/* FrontWeekDAO.selectAllTestCnt */
		SELECT *
		FROM   (SELECT CASE WHEN a.test_cnt > 999 THEN '999+' ELSE a.test_cnt END test_cnt,
		               CASE WHEN b.true_cnt > 999 THEN '999+' ELSE b.true_cnt END true_cnt
		        FROM   (SELECT m.mem_id,
		                       Count(DISTINCT m.qst_id) AS test_cnt
		                FROM   cb_aigo_my_answer_list m
		                WHERE  1 = 1
		                       AND m.mem_id = #{memId}) a
		               INNER JOIN (SELECT m.mem_id,
		                                  Count(DISTINCT m.qst_id) AS true_cnt
		                           FROM   cb_aigo_my_answer_list m
		                           WHERE  1 = 1
		                                  AND m.mem_id = #{memId}
		                                  AND m.pass_yn = 'y') b
		                       ON a.mem_id = b.mem_id) a 
	</select>
</mapper>
